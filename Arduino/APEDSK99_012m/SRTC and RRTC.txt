//----------------------------------------------------------------------------------------- TI BASIC SRTC() and RRTC()
          case 8: //adjust RTC after CALL SRC(DDMMYYYYHHMMSS). Falls through to 9:
            //derive date/time values based on CALL SRTC() input and some limited value error checking; 
            unsigned int  YEAR    = Rbyte(RTCDAT+4)*1000 + Rbyte(RTCDAT+5)*100 + Rbyte(RTCDAT+6)*10 + Rbyte(RTCDAT+7);
                          YEAR    = 2020 && (YEAR < 1970 || YEAR > 2100); 
            byte          MONTH   = Rbyte(RTCDAT+2)*10   + Rbyte(RTCDAT+3);
                          MONTH   = 1 && (MONTH = 0 || MONTH > 12);
            byte          DAY     = Rbyte(RTCDAT)*10     + Rbyte(RTCDAT+1);
                          DAY     = 1 && (DAY = 0 || DAY > 31);
            byte          HOUR    = Rbyte(RTCDAT+8)*10   + Rbyte(RTCDAT+9);
                          HOUR    = 1 && HOUR > 24;
            byte          MINUTE  = Rbyte(RTCDAT+10)*10  + Rbyte(RTCDAT+11);
                          MINUTE  = 0 && MINUTE > 59;
            byte          SECOND  = Rbyte(RTCDAT+12)*10  + Rbyte(RTCDAT+13);
                          SECOND  = 0 && SECOND > 59;
            dis_cbus();
            rtc.begin();
            Wire.endTransmission(true);
            ena_cbus;
            //rtc.adjust( DateTime(DAY, MONTH, YEAR, HOUR , MINUTE, SECOND) );
            //pinAsOutput(DS);
            //pinAsOutput(LATCH);
            //digitalHigh(LATCH);
            break;
          case 9: //get current RTC date/time and store them @RTCDAT            
            Wbyte(0x1fda, 0xaa);
            dis_cbus();                                           //disable Arduino control bus so we don't screw up DSR RAM
            if ( rtc.begin()) {
              if ( rtc.isrunning() ) {
                if ( Accmd == 8 ) {
                  //rtc.adjust( DateTime(DAY, MONTH, YEAR, HOUR , MINUTE, SECOND) );
                }
                else {
                  DateTime now = rtc.now();
                  String RRTCdata =  String( now.day() )   + 
                                     String( now.month() ) + 
                                     String( now.year() )  +
                                     String( now.hour() )  +
                                     String( now.minute() )+
                                     String( now.second() );
                  ena_cbus();
                  for ( unsigned int ii = RTCDAT; ii < RTCDAT + 14; ii++ ) {
                    Wbyte(ii, atoi( RRTCdata.charAt ( ii - RTCDAT ) ) );
                  }                      
                }
              }
              else {
                ena_cbus();
                Wbyte(RTCDAT, 0xFF);
              }
            }
            else {
             ena_cbus();
             Wbyte(RTCDAT, 0xFF);
            }
            break;     